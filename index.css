@import "@getable/variables";

:root {
  --lineHeight-input: 2.4em;
  --verticalPadding-input: var(--padding-small);
  --height-input: calc(var(--lineHeight-input) + (var(--verticalPadding-input) * 2));
  --backgroundColor-input: #ffffff;
  --color-input-pop: #eee;
  --color-input-label: var(--color-black10);
  --lineHeight-input-bump: .3em;
  --color-input-focus: var(--color-new, #7ed321);
  --marginBottom-input: var(--padding-large);
  --color-input-border: var(--color-grey30);
  --borderRadius-input: 3px;
  --color-input-error: var(--color-warning);
}

.input input:invalid {
  border-color: #ccc !important;
  box-shadow: none !important;
  -webkit-box-shadow: none !important;
  color: var(--color-black10) !important;
}

/* fred doesn't like the spinners, so kill 'em */
.input input ::-webkit-outer-spin-button
, .input input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
}

.input {
  display: table;
  position: relative;
  width: 100%;
  /* give a lot of space bettween inputs */
  margin-bottom: var(--marginBottom-input);
  cursor: pointer;
}

/* fieldsets are useful for grouping radio and checkboxes, and should look like regular labels */
fieldset.input {
  border: none;
  padding: 0;
  margin-left: 0;
  margin-right: 0;
  cursor: default;
}

/* the last input doesn't need so much space */
.input:last-of-type {
  margin-bottom: 2em;
}

/* useful if for keeping spacing of parents of inputs with siblings of input fields consistent */
.input-group {
  margin-bottom: var(--marginBottom-input);
}

.input-label {
  margin-bottom: var(--verticalPadding-input);
  font-weight: 600;
  color: var(--color-input-label);
  display: table-caption;
}

/* reset the bootstrap styles for legends */
legend.input-label {
  font-size: 1rem;
  line-height: 1;
  border-bottom: none;
}

.input input
, .input textarea {
  box-sizing: border-box;
  display: table-cell;
  padding: var(--verticalPadding-input);
  margin: 0;
  width: 100%;

  -webkit-appearance: none;
  appearance: none;

  font-size: 1em;

  border: 1px solid var(--color-input-border);
  background-color: var(--backgroundColor-input);

  border-radius: var(--borderRadius-input);
  box-shadow: 0 1px 1px 0 #fff, inset 0 4px 3px -4px rgba(0,0,0,0.2);
}

.input.filled input
, .input.filled textarea {
  background: #FFFFFF;
}

.input input {
  line-height: var(--lineHeight-input);
}
.input input[disabled] {
  background: var(--color-white30);
  box-shadow: none;
  color: var(--color-grey50);
  cursor: not-allowed;
}
.input input:focus{
  background: #FFFFFF;
}

/* addons */
.input-addon {
  box-sizing: border-box;
  display: table-cell;
  padding: 0 calc(var(--verticalPadding-input) * 2);
  width: var(--height-input);

  background-color: var(--backgroundColor-input);
  line-height: var(--lineHeight-input);
  font-size: 1em;

  vertical-align: middle;
  text-align: center;
  white-space: nowrap;
  box-shadow: inset 0 3px 3px -3px #ccc;
}

i.input-addon {
  /* center the icons a bit more */
  padding-top: var(--lineHeight-input);
  line-height: calc(var(--lineHeight-input) - var(--lineHeight-input-bump));
}

/* after addons*/
input + .input-addon
/* before addons */
, .input-label + .input-addon {
  border: 1px solid var(--color-input-border);

  border-radius: var(--borderRadius-input);
}

/* before addon */
.input-label + .input-addon {
  border-right: none;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.input-addon + input {
  border-left: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

/* after addon */
input + .input-addon {
  border-left: none;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.input input:not(:last-child) {
  border-right: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

/* make the addon "pop" */
.input .input-addon-pop {
  background-color: var(--color-input-pop);
}

  color: var(--color-input-label);
}

/* large addons */
.input .input-addon-lg {
  width: 2.5em;
  padding-right: 0;
  padding-left: 0;

  font-size: 1.5em;
  line-height: calc(var(--lineHeight-input) - (var(--lineHeight-input-bump) * 1.5));
}

/* focus styling */
.input input:focus
, .input textarea:focus {
  /*box-shadow: inset 0 0 0 1px var(--color-input-focus, #7ed321);*/
  box-shadow: none;
  outline: none;
}
/* error styling */
.input-label-empty {
  display: none;
}

.input[data-error]:before
, .input-dropdown[data-error]:before {
  content: "\e103\0020" attr(data-error);
  font-family: "Elusive-Icons";
  position: absolute;
  width: 100%;
  top: 0;
  /* bump it in from the side just a bit */
  right: .1em;
  color: var(--color-input-error);
}

.input[data-error] .input-label
, .input-dropdown[data-error] .input-label {
  visibility: hidden;
}

.input[data-error] .input-label-empty {
  display: table-caption;
}
